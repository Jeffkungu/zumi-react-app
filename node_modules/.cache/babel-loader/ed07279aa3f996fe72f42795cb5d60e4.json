{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactProjects/zumi-react-app/src/components/Order/Order.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from '../MainPage.module.css';\nimport OrderItem from './OrderItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Order = props => {\n  _s();\n\n  const [orderList, setOrderList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  async function fetchOrdersHandler() {\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts/');\n\n      if (!response.ok) {\n        throw new Error('Error fetching products');\n      }\n\n      const data = await response.json();\n      setError(null);\n      setOrderList(data);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  }\n\n  fetchOrdersHandler();\n  const orders = orderList.map(order => /*#__PURE__*/_jsxDEV(OrderItem, {\n    id: order._id,\n    number: order.orderNumber,\n    name: order.customerName,\n    address: order.customerAddress,\n    status: order.status,\n    products: order.id\n  }, order._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.content,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Order, \"ygjsPYykJe896oa+wSgXGu+UGQQ=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/user/ReactProjects/zumi-react-app/src/components/Order/Order.js"],"names":["useState","Card","classes","OrderItem","Order","props","orderList","setOrderList","isLoading","setIsLoading","error","setError","fetchOrdersHandler","response","fetch","ok","Error","data","json","err","message","orders","map","order","_id","orderNumber","customerName","customerAddress","status","id","content"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeY,kBAAf,GAAqC;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXD,CAWE,OAAOU,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAEDG,EAAAA,kBAAkB;AAElB,QAAMS,MAAM,GAAGf,SAAS,CAACgB,GAAV,CAAcC,KAAK,iBAChC,QAAC,SAAD;AAEE,IAAA,EAAE,EAAEA,KAAK,CAACC,GAFZ;AAGE,IAAA,MAAM,EAAED,KAAK,CAACE,WAHhB;AAIE,IAAA,IAAI,EAAEF,KAAK,CAACG,YAJd;AAKE,IAAA,OAAO,EAAEH,KAAK,CAACI,eALjB;AAME,IAAA,MAAM,EAAEJ,KAAK,CAACK,MANhB;AAOE,IAAA,QAAQ,EAAEL,KAAK,CAACM;AAPlB,KACON,KAAK,CAACC,GADb;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAYA,sBACE;AAAS,IAAA,SAAS,EAAEtB,OAAO,CAAC4B,OAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,iBACG,CAACtB,SAAD,iBAAc;AAAA,kBAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,cADjB,EAEGb,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB,EAGG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9CD;;GAAMN,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react'\nimport Card from '../UI/Card'\nimport classes from '../MainPage.module.css'\nimport OrderItem from './OrderItem'\n\nconst Order = props => {\n  const [orderList, setOrderList] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  async function fetchOrdersHandler () {\n    try {\n      const response = await fetch(\n        'https://jsonplaceholder.typicode.com/posts/'\n      )\n      if (!response.ok) {\n        throw new Error('Error fetching products')\n      }\n      const data = await response.json()\n      setError(null)\n      setOrderList(data)\n      setIsLoading(false)\n    } catch (err) {\n      setError(err.message)\n      setIsLoading(false)\n    }\n  }\n\n  fetchOrdersHandler()\n\n  const orders = orderList.map(order => (\n    <OrderItem\n      key={order._id}\n      id={order._id}\n      number={order.orderNumber}\n      name={order.customerName}\n      address={order.customerAddress}\n      status={order.status}\n      products={order.id}\n    />\n  ))\n\n  return (\n    <section className={classes.content}>\n      <Card>\n        {!isLoading && <ul>{orders}</ul>}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>}\n      </Card>\n    </section>\n  )\n}\n\nexport default Order\n"]},"metadata":{},"sourceType":"module"}