{"ast":null,"code":"var _jsxFileName = \"/Users/user/ReactProjects/zumi-react-app/src/components/Product/Product.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './Product.module.css';\nimport ProductItem from './ProductItem/ProductItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PRODUCTS = [{\n  id: 'm1',\n  name: 'Men Shirt',\n  brand: 'Gucci',\n  sku: 'GUCCIMEN',\n  price: 220.99,\n  quantity: 200\n}, {\n  id: 'm2',\n  name: 'Ladies Dress',\n  brand: 'Versace',\n  sku: 'GUCCIMEN',\n  price: 100.99,\n  quantity: 200\n}, {\n  id: 'm3',\n  name: 'Men Shirt',\n  brand: 'Prada',\n  sku: 'GUCCIMEN',\n  price: 80.0,\n  quantity: 200\n}, {\n  id: 'm4',\n  name: 'Chino Trousers',\n  brand: 'Gucci',\n  sku: 'GUCCIMEN',\n  price: 180.99,\n  quantity: 200\n}];\n\nconst Product = props => {\n  _s();\n\n  const [productList, setProductList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  async function fetchProductsHandler() {\n    setError(null);\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts/');\n\n      if (!response.ok) {\n        throw new Error('Error fetching products');\n      }\n\n      const data = await response.json();\n      setProductList(data);\n    } catch (err) {// setError(err.message)\n    }\n\n    setIsLoading(false);\n  }\n\n  fetchProductsHandler();\n  const products = productList.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n    id: product.userId,\n    sku: product.title,\n    name: product.title,\n    brand: product.title,\n    price: product.id,\n    quantity: product.id\n  }, product.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.products,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"9q3KClpXvfpu90OCZGwsn6E44BM=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/user/ReactProjects/zumi-react-app/src/components/Product/Product.js"],"names":["useState","Card","classes","ProductItem","DUMMY_PRODUCTS","id","name","brand","sku","price","quantity","Product","props","productList","setProductList","isLoading","setIsLoading","error","setError","fetchProductsHandler","response","fetch","ok","Error","data","json","err","products","map","product","userId","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,GAAG,EAAE,UAJP;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CADqB,EASrB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,KAAK,EAAE,SAHT;AAIEC,EAAAA,GAAG,EAAE,UAJP;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CATqB,EAiBrB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,GAAG,EAAE,UAJP;AAKEC,EAAAA,KAAK,EAAE,IALT;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CAjBqB,EAyBrB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,GAAG,EAAE,UAJP;AAKEC,EAAAA,KAAK,EAAE,MALT;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CAzBqB,CAAvB;;AAmCA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAemB,oBAAf,GAAuC;AACrCD,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAX,MAAAA,cAAc,CAACU,IAAD,CAAd;AACD,KATD,CASE,OAAOE,GAAP,EAAY,CACZ;AACD;;AACDV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDG,EAAAA,oBAAoB;AAEpB,QAAMQ,QAAQ,GAAGd,WAAW,CAACe,GAAZ,CAAgBC,OAAO,iBACtC,QAAC,WAAD;AAEE,IAAA,EAAE,EAAEA,OAAO,CAACC,MAFd;AAGE,IAAA,GAAG,EAAED,OAAO,CAACE,KAHf;AAIE,IAAA,IAAI,EAAEF,OAAO,CAACE,KAJhB;AAKE,IAAA,KAAK,EAAEF,OAAO,CAACE,KALjB;AAME,IAAA,KAAK,EAAEF,OAAO,CAACxB,EANjB;AAOE,IAAA,QAAQ,EAAEwB,OAAO,CAACxB;AAPpB,KACOwB,OAAO,CAACxB,EADf;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAYA,sBACE;AAAS,IAAA,SAAS,EAAEH,OAAO,CAACyB,QAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,iBACG,CAACZ,SAAD,iBAAc;AAAA,kBAAKY;AAAL;AAAA;AAAA;AAAA;AAAA,cADjB,EAEGZ,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB,EAGG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CD;;GAAMN,O;;KAAAA,O;AA+CN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\nimport Card from '../UI/Card'\nimport classes from './Product.module.css'\nimport ProductItem from './ProductItem/ProductItem'\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: 'm1',\n    name: 'Men Shirt',\n    brand: 'Gucci',\n    sku: 'GUCCIMEN',\n    price: 220.99,\n    quantity: 200\n  },\n  {\n    id: 'm2',\n    name: 'Ladies Dress',\n    brand: 'Versace',\n    sku: 'GUCCIMEN',\n    price: 100.99,\n    quantity: 200\n  },\n  {\n    id: 'm3',\n    name: 'Men Shirt',\n    brand: 'Prada',\n    sku: 'GUCCIMEN',\n    price: 80.0,\n    quantity: 200\n  },\n  {\n    id: 'm4',\n    name: 'Chino Trousers',\n    brand: 'Gucci',\n    sku: 'GUCCIMEN',\n    price: 180.99,\n    quantity: 200\n  }\n]\n\nconst Product = props => {\n  const [productList, setProductList] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  async function fetchProductsHandler () {\n    setError(null)\n    try {\n      const response = await fetch(\n        'https://jsonplaceholder.typicode.com/posts/'\n      )\n      if (!response.ok) {\n        throw new Error('Error fetching products')\n      }\n      const data = await response.json()\n      setProductList(data)\n    } catch (err) {\n      // setError(err.message)\n    }\n    setIsLoading(false)\n  }\n\n  fetchProductsHandler()\n\n  const products = productList.map(product => (\n    <ProductItem\n      key={product.id}\n      id={product.userId}\n      sku={product.title}\n      name={product.title}\n      brand={product.title}\n      price={product.id}\n      quantity={product.id}\n    />\n  ))\n\n  return (\n    <section className={classes.products}>\n      <Card>\n        {!isLoading && <ul>{products}</ul>}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>}\n      </Card>\n    </section>\n  )\n}\n\nexport default Product\n"]},"metadata":{},"sourceType":"module"}